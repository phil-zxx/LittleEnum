language: cpp

matrix:
  include:
    - name: "Linux (Clang 10)"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-10
            - libstdc++-9-dev
      env:
        - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    - name: "Linux (GCC 9)"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages: 
            - g++-9
      env:
          - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    - name: "Windows (MSVC 2017)"
      os: windows
      language: cpp
      env: VS17=true

before_install:
    - eval "${MATRIX_EVAL}"

install:
  - |
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.tar.gz"
      mkdir -p ${TRAVIS_BUILD_DIR}/cmake_3_14
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${TRAVIS_BUILD_DIR}/cmake_3_14
      export PATH=${TRAVIS_BUILD_DIR}/cmake_3_14/bin:${PATH}
    fi

script:
  - |
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
      cmake --version
      cmake CMakeLists.txt
      make
    fi
  - |
    if [[ ${TRAVIS_OS_NAME} == "windows" ]]; then
       mkdir build
       cd build
       cmake .. -G "Visual Studio 15 2017 Win64"
       cmake --build .
    fi
